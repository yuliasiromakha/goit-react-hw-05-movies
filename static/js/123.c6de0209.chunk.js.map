{"version":3,"file":"static/js/123.c6de0209.chunk.js","mappings":"qLA+CA,UA5CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAIRC,MAAM,GAAD,OAFY,6BAEZ,oBAAwBN,EAAxB,4BAHW,qCAIbO,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAACM,GACLT,EAAWS,EAAKC,SAChBC,QAAQC,IAAIH,EACb,IACAI,OAAM,SAACC,GACNH,QAAQC,IAAI,0BAA2BE,EACxC,GACJ,GAAE,CAAClB,IAEmB,IAAnBG,EAAQgB,QACH,gDAIP,+BACE,wBACGhB,EAAQiB,KAAI,SAACC,GAAD,OACX,2BACE,0BACE,wCADF,IAC4BA,EAAOC,WAEnC,uBAAID,EAAOE,YAJJF,EAAOG,GADL,OAWpB,C","sources":["pages/Reviews.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const API_KEY = \"84c9ab04e100be4662cee8d4849b6920\";\n    const BASE_URL = \"https://api.themoviedb.org\";\n\n    fetch(`${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setReviews(data.results);\n        console.log(data);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching reviews:\", error);\n      });\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <div>No reviews found.</div>;\n  }\n\n  return (\n    <>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>\n              <strong>Author:</strong> {review.author}\n            </p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetch","then","response","ok","Error","status","json","data","results","console","log","catch","error","length","map","review","author","content","id"],"sourceRoot":""}