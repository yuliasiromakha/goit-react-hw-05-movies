{"version":3,"file":"static/js/227.4cb3a6bc.chunk.js","mappings":"qMA+EA,UA1Ec,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAwCA,OAFAC,QAAQC,IAAI,QAAQR,IAGlB,iCAEE,iBAAKS,UAAU,iBAAf,WACE,kBACEC,KAAK,OACLC,MAAOR,EACPS,SA7CwB,SAACC,GAC/B,IAAMC,EAAQD,EAAME,OAAOJ,MAC3BP,EAAeU,GACM,KAAjBA,EAAME,QACRV,EAAiB,GAEpB,EAwCOW,YAAY,sBAEd,mBAAQC,QAvCO,WACnB,GAA2B,KAAvBf,EAAYa,OAAhB,CAQAG,MAAM,GAAD,OAFY,6BAEZ,iCAAqChB,EAArC,oBAHW,qCAIbiB,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAACM,GACLpB,EAAiBoB,EAAKC,SACM,IAAxBD,EAAKC,QAAQC,QACfC,MAAM,4BAET,IACAC,OAAM,SAACC,GACNxB,QAAQC,IAAI,iCAAkCuB,EAC/C,GApBF,MAFCzB,EAAiB,GAuBpB,EAcK,uBAGDD,EAAcuB,OAAS,IACxB,iBAAKnB,UAAU,iBAAf,WACE,4CACA,wBACGJ,EAAc2B,KAAI,SAACC,GAAD,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAACC,KAAMrC,GAAhD,SAA6DiC,EAAOK,SAD7DL,EAAOE,GADC,UASvB,SAAC,KAAD,MAGL,C","sources":["pages/Movie.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { useParams, Link, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { Link, Outlet, useLocation} from \"react-router-dom\";\nimport './Movie.css'\n\nconst Movie = () => {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchInputChange = (event) => {\n    const query = event.target.value;\n    setSearchQuery(query);\n    if (query.trim() === \"\") {\n      setSearchResults([]);\n    }\n  };\n  \n\n  const handleSearch = () => {\n    if (searchQuery.trim() === \"\") {\n      setSearchResults([]);\n      return;\n    }\n  \n    const API_KEY = \"84c9ab04e100be4662cee8d4849b6920\";\n    const BASE_URL = \"https://api.themoviedb.org\";\n  \n    fetch(`${BASE_URL}/3/search/movie?query=${searchQuery}&api_key=${API_KEY}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setSearchResults(data.results);\n        if (data.results.length === 0) {\n          alert(\"Sorry, no movie was found\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error fetching search results:\", error);\n      });\n  };\n  \n  console.log('movie',location);\n\n  return (\n    <>\n\n      <div className=\"search_section\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n          placeholder=\"Search movies...\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      {searchResults.length > 0 && (\n      <div className=\"search_results\">\n        <h2>Search Results</h2>\n        <ul>\n          {searchResults.map((result) => (\n            <li key={result.id}>\n              <Link to={`/movies/${result.id}`} state={{from: location}} >{result.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movie;"],"names":["location","useLocation","useState","searchQuery","setSearchQuery","searchResults","setSearchResults","console","log","className","type","value","onChange","event","query","target","trim","placeholder","onClick","fetch","then","response","ok","Error","status","json","data","results","length","alert","catch","error","map","result","to","id","state","from","title"],"sourceRoot":""}