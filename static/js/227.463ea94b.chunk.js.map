{"version":3,"file":"static/js/227.463ea94b.chunk.js","mappings":"qMAgFA,UA3Ec,WAIZ,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAuCA,OACE,iCAEE,iBAAKC,UAAU,iBAAf,WACE,kBACEC,KAAK,OACLC,MAAON,EACPO,SA3CwB,SAACC,GAC/B,IAAMC,EAAQD,EAAME,OAAOJ,MAC3BL,EAAeQ,GACM,KAAjBA,EAAME,QACRR,EAAiB,GAEpB,EAsCOS,YAAY,sBAEd,mBAAQC,QArCO,WACnB,GAA2B,KAAvBb,EAAYW,OAAhB,CAQAG,MAAM,GAAD,OAFY,6BAEZ,iCAAqCd,EAArC,oBAHW,qCAIbe,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAACM,GACLlB,EAAiBkB,EAAKC,SACM,IAAxBD,EAAKC,QAAQC,QACfC,MAAM,4BAET,IACAC,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAkCF,EAC/C,GApBF,MAFCvB,EAAiB,GAuBpB,EAYK,uBAGDD,EAAcqB,OAAS,IACxB,iBAAKnB,UAAU,iBAAf,WACE,4CACA,wBACGF,EAAc2B,KAAI,SAACC,GAAD,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAA5B,SAAmCF,EAAOG,SADnCH,EAAOE,GADC,UASvB,SAAC,KAAD,MAGL,C","sources":["pages/Movie.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { useParams, Link, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { Link, Outlet} from \"react-router-dom\";\nimport './Movie.css'\n\nconst Movie = () => {\n  // const { movieId } = useParams();\n  // const navigate = useNavigate();\n  // const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  // const [movie, setMovie] = useState(null);\n\n  const handleSearchInputChange = (event) => {\n    const query = event.target.value;\n    setSearchQuery(query);\n    if (query.trim() === \"\") {\n      setSearchResults([]);\n    }\n  };\n  \n\n  const handleSearch = () => {\n    if (searchQuery.trim() === \"\") {\n      setSearchResults([]);\n      return;\n    }\n  \n    const API_KEY = \"84c9ab04e100be4662cee8d4849b6920\";\n    const BASE_URL = \"https://api.themoviedb.org\";\n  \n    fetch(`${BASE_URL}/3/search/movie?query=${searchQuery}&api_key=${API_KEY}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setSearchResults(data.results);\n        if (data.results.length === 0) {\n          alert(\"Sorry, no movie was found\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error fetching search results:\", error);\n      });\n  };\n  \n  return (\n    <>\n\n      <div className=\"search_section\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n          placeholder=\"Search movies...\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      {searchResults.length > 0 && (\n      <div className=\"search_results\">\n        <h2>Search Results</h2>\n        <ul>\n          {searchResults.map((result) => (\n            <li key={result.id}>\n              <Link to={`/movies/${result.id}`}>{result.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movie;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\n// import \"./Movie.css\";\n\n// const Movie = () => {\n//   const { movieId } = useParams();\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n//   const location = useLocation();\n//   const searchResultPage = location.state?.searchResultPage;\n\n//   const handleSearchInputChange = (event) => {\n//     const query = event.target.value;\n//     setSearchQuery(query);\n//     if (query.trim() === \"\") {\n//       setSearchResults([]);\n//     }\n//   };\n\n//   const handleSearch = () => {\n//     if (searchQuery.trim() === \"\") {\n//       setSearchResults([]);\n//       return;\n//     }\n\n//     const API_KEY = \"84c9ab04e100be4662cee8d4849b6920\";\n//     const BASE_URL = \"https://api.themoviedb.org\";\n\n//     fetch(`${BASE_URL}/3/search/movie?query=${searchQuery}&api_key=${API_KEY}`)\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(response.status);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setSearchResults(data.results);\n//         if (data.results.length === 0) {\n//           alert(\"Sorry, no movie was found\");\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(\"Error fetching search results:\", error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     if (searchResultPage) {\n//       setSearchQuery(\"\");\n//       setSearchResults([]);\n//     }\n//   }, [searchResultPage]);\n\n//   return (\n//     <>\n//       {movieId && (\n//         <>\n//           <Link to={searchResultPage || \"/\"} className=\"button\">\n//             Go back\n//           </Link>\n//         </>\n//       )}\n\n//       <div className=\"search_section\">\n//         <input\n//           type=\"text\"\n//           value={searchQuery}\n//           onChange={handleSearchInputChange}\n//           placeholder=\"Search movies...\"\n//         />\n//         <button onClick={handleSearch}>Search</button>\n//       </div>\n\n//       {searchResults.length > 0 && (\n//         <div className=\"search_results\">\n//           <h2>Search Results</h2>\n//           <ul>\n//             {searchResults.map((result) => (\n//               <li key={result.id}>\n//                 <Link\n//                   to={{\n//                     pathname: `/movies/${result.id}`,\n//                     state: {\n//                       searchResultPage: location.pathname,\n//                     },\n//                   }}\n//                 >\n//                   {result.title}\n//                 </Link>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n\n//       <Outlet />\n//     </>\n//   );\n// };\n\n// export default Movie;\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","className","type","value","onChange","event","query","target","trim","placeholder","onClick","fetch","then","response","ok","Error","status","json","data","results","length","alert","catch","error","console","log","map","result","to","id","title"],"sourceRoot":""}